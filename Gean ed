Primo
#include <iostream>
using namespace std;
bool ePrimo(int n){
    for(int i =2; i<n; i++){
        if(n%i==0){
            
            return false;
        }
        
    }
    return true;
}


int main(){
    int a,b;
    cin>>a;
    cin>>b;
    for(int i=a; i<=b; i++){
        if( ePrimo(i) ){
            cout<<i<<"\n";
           
        }
    }
    
    return 0;
}
----------------------------------------------------------

Função para calcular número de Euler

#include <iostream>
#include <iomanip>
using namespace std;
double fatorial(int n){
    double fat;
    int i;
    int res=1;
    for(int i=1; i<=n; i++){
       res= res * i;
       
    
    }
    return res;
}

double euler(int n){
    double res=1;
    for(int i=1; i<=n; i++){
        res= res + 1/fatorial(i);
    }
    return res;  
    
}

int main(){
    double n;
    cin >> n;
    cout<<fixed<<euler(n);
    return 0;
}

    

-----------------------------------------
Quadrado Mágico
 #include<iostream>
using namespace std;

int func(int **M, int nl, int nc){
    
    for(int i=0;i<nl;i++)
        for(int j=0;j<nc;j++)
         cin>>M[i][j];
}

int func1(int **M, int nl,int nc){
    
    int soma1=0,soma2=0, soma3=0, soma4=0, soma5=0, soma6=0, soma7=0, soma8=0;
    for(int i=0;i<nl;i++){
    soma1 = soma1 + M[i][i];
    }
    
    for(int i=0;i<nl;i++){
        for(int j=0;j<nc;j++){  
            if(i+j==nl-1)soma2 = soma2 + M[i][j];
            
        }
    } 
    
    for(int i=0; i<3; i++){
        soma3 = soma3 + M[i][0];
        
    }
    for(int i=0; i<3; i++){
        soma4 = soma4 + M[i][1];
        
    }
    for(int i=0; i<3; i++){
        soma5 = soma5 + M[i][2];
        
    }
    for(int i=0; i<3; i++){
        soma6 = soma6 + M[0][i];
    }
    for(int i=0; i<3; i++){
        soma7 = soma7 + M[1][i];
    }
    for(int i=0; i<3; i++){
        soma8 = soma8 + M[2][i];
    }
    if(soma1==soma2 && soma1==soma3 && soma1==soma4 && soma1==soma5 && soma1==soma6 && soma1==soma7 && soma1==soma8){
        cout<<"sim";
    }
    else{
        cout<<"nao";
    }
  
}


int main(){
int **M;
int nl=3,nc=3;

    M = (int **) malloc(nl*sizeof(int *));
    for(int i=0;i<nl;i++)
    M[i] = (int *) malloc(nc*sizeof(int));
    
func(M,nl,nc);
func1(M,nl,nc);

    return 0;
}
------------------------------
Soldados em posição
#include <iostream>
using namespace std;
int main(){
    int l=3,c=3;
    int m[l][c];
    for(int l=0; l<3; l++){
        for(int c=0; c<3; c++){
            cin>>m[l][c];
        }
    }
    int cont=0;
    for(int i=0; i<l-1; i++){
        for(int j=0; j<c; j++){
            if(m[i][j]>m[i+1 ][j])
            cont++;
        }
    } 
    cout<<cont<<"\n";        
    
    return 0;
} 
